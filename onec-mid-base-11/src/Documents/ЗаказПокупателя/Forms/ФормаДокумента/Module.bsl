
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
    ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ЗаполнитьДаннымиСтроку()     
	//{{ Купцова  Добавление процедуры ЗаполнитьДаннымиСтроку
	
	//{{ Купцова  Пересчитывание табличных частей товары и услуги в соответствии со скидкой
	Для каждого Стр из Объект.Товары Цикл 
		//{{ Купцова  Определение суммы скидки
		Скидка = Стр.Скидка + Объект.СогласованнаяСкидка;
		//
		Если Скидка > 100 Тогда
			Сообщить("Сумма скидки превышает 100");
			Возврат; 
		Иначе  
			КоэффициентСкидки = 1 - Скидка/100;
		КонецЕсли;
		
		Стр.Сумма = Стр.Цена * Стр.Количество*КоэффициентСкидки;
	КонецЦикла; 	
	Для каждого Стр из Объект.Услуги Цикл 
		Скидка = Стр.Скидка + Объект.СогласованнаяСкидка; 
		Если Скидка > 100 Тогда
			Сообщить("Сумма скидки превышает 100");
			Возврат; 
		Иначе  
			КоэффициентСкидки = 1 - Скидка/100;
		КонецЕсли;
		
		Стр.Сумма = Стр.Цена * Стр.Количество*КоэффициентСкидки;
	КонецЦикла;	
	// }}
КонецПроцедуры


&НаКлиенте
Асинх Процедура СогласованнаяСкидкаПриИзменении(Элемент)
	// {{ Купцова Добавление асинхронной процедуры 
	Если ЗначениеЗаполнено(Объект.Товары) или ЗначениеЗаполнено(Объект.Услуги)  Тогда 
		// {{ Купцова  Добавление асинхронного вопроса и получение ответа от клиента
		Режим = РежимДиалогаВопрос.ДаНет;
		ОтветАсинх = ВопросАсинх("Пересчитать сумму строк в соответствии со скидкой?",Режим); 
		Ответ = ждать ОтветАсинх;
		// }}
		
		Если Ответ = КодВозвратаДиалога.Да Тогда 
			// {{ Купцова  Перезаполняем строки табличной части в соответствии со скидкой
			ЗаполнитьДаннымиСтроку();
			// }}
			РассчитатьСуммуДокумента();
		КонецЕсли;
	Иначе
		Возврат;
	КонецЕсли; 
	//}}
КонецПроцедуры
#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУслуги

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

#КонецОбласти


&НаКлиенте
Процедура ПересчитатьТабЧасть(Команда)
	// Купцова {{ Пересчитывание табличной части документа
	ЗаполнитьДаннымиСтроку();   
	// }}
КонецПроцедуры
#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура РассчитатьСуммуСтроки(ТекущиеДанные)
	
	//КоэффициентСкидки = 1 - ТекущиеДанные.Скидка / 100;
	//ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество * КоэффициентСкидки; 
	СкидкаНаТовар = ТекущиеДанные.Скидка + Объект.СогласованнаяСкидка;
	
	Если СкидкаНаТовар > 100 Тогда
		Сообщить("Сумма скидки превышает 100"); 
		ТекущиеДанные.Сумма = 0; 
		Возврат; 
	Иначе  
		КоэффициентСкидки = 1 - СкидкаНаТовар/100;
		ТекущиеДанные.Сумма = ТекущиеДанные.Количество * ТекущиеДанные.Цена*КоэффициентСкидки;
	КонецЕсли;

	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуДокумента()
	
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Сумма");
	
КонецПроцедуры

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#КонецОбласти
